#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Apr 24 08:34:33 2020

@author: learncodeonline
"""
import sqlite3 as lite




#Functionality goes here


class DatabaseManage(object):
    
    
    def __init__(self):
        global con
        try:
            con = lite.connect('courses.db')
            with con:
                cur = con.cursor()
                cur.execute("CREATE TABLE IF NOT EXIST course(Id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, descrption TEXT, price TEXT, is_private BOOLEAN NOT NULL DEFAULT 1)")
        except Exception:
            print("Unable to create a DB !")
            
            
    #TODO: create data      
    def insert_data(self, data):
          try:
              with con:
                  cur = con.cursor()
                  print("In try block just below to cur.cursor(). of method insert data()")
                   cur.execute("INSERT INTO course(name, description, price, is_private) VALUES(?,?,?,?)", data)
                  print("In try block just below to cur.execute() of insert_data().")
              return True    
          
          except Exception:
              print("Here is the error.")
              return False
         
            
            
            
      
    # TODO: read data
    def fetch_data(self):
        try:
            with con:
                cur = con.cursor()
                print("In try block just below to cur.cursor().")
                cur.execute("SELECT * FROM course")
                print("In try block just below to cur.execute(). of method fetch_data()")
                return cur.fetchall()
        except Exception:
            print("There is something wrong.")
            return False
     
        
     #TODO: delete data    
    def delete_data(self, id):
         try:
             with con:
                 cur = con.cursor()
                 sql = "DELETE FROM course WHERE id = ?"
                 cur.execute(sql, [id])
                 
         except Exception:
             return False
     


#provide interface here
             
def main():
          print("*"* 40)
          print("\n :: COURSE MANAGEMENT :: \n")
          print("*"* 40)
          print("\n")
          
          db = DatabaseManage()
          
          print("#"* 40)    
          print("\n :: USER MANUAL :: \n")
          print("#"* 40)
          
          while(True):
              print("\nPress 1. Insert a new Course\n" )
              print("\nPress 2. Show all Courses\n" )
              print("\nPress 3. Delete a course (NEED ID OF COURSE)\n")
              print("\nPress 4. Exit \n")
              print("#"*40)
              print("\n")
               
             
              choice = input("\n Enter a choice: ")
          
              if choice == '1':
                   name = input("\n Enter course name: ")
                   description = input("\n Enter course description: ")
                   price = input("\n Enter course price: ")
                   private = input("\n Is this course private(0/1)?:" )
              
               
                   if db.insert_data([name, description, price, private]):
                        print("Course was inserted succesfully")
                   else:
                        print(" ::OOPS SOMETHING WENT WRONG ::\n")
          
            
              elif choice == '2':      
                   print("\n :: Course list ::")
              
                   for index, item in enumerate(db.fetch_data()):
                       print("\n Course ID : " + str(item[0]))
                       print("\n Course Name : " + str(item[1]))
                       print("\n Course description : " + str(item[2]))
                       print("\n Course price : " + str(item[3]))
                       private = 'Yes' if item[4] else 'NO'
                       print("\n Is private : " + private)
                       print("\n")
                   
               
              elif choice == '3':     
                    record_id = input("Enter the course ID: ")
                
                    if db.delete_data(record_id):
                        print("Course was deleted successfully")
                    else:
                        print(" :: OOPS SOMETHING WENT WRONG :: \n")
             
                
              elif choice == '4': 
                   return True
                  
              else:        
                  print("\n BAD CHOICE")
                
                
if __name__ == '__main__':
      main()                  
            
            
            
            
            
            
            
